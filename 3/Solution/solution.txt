Problem 1:
    i.   ls -l | egrep rwxrwxrw-
    ii.  ls -l | egrep -cw Aug
    iii. du -amd 1 | egrep "^1[0-9]|^[2-9]"
         du -ahd 1 | awk '{if (index($1, "K") == 0 && $1 != 0) print $0 }'
    iv.  ls -l | egrep -vw "Sep|^total"; ls -l | egrep -vcw "Sep|^total"

Problem 2:
    i.   egrep "z[a-z]a" words.txt
         egrep "z.a" words.txt
    ii.  egrep "apple|papaya|kiwi" words.txt
    iii. egrep "^abid" words.txt
    iv.  egrep "ever$" words.txt
    v.   egrep "[aeiou]{4,}" words.txt  // At least 4
         egrep "[aeiou]{4}" words.txt  // Exactly 4 for matching, but doesn't mean excludes at least 4 results
         egrep "([^aeiou]|\b)[aeiou]{4}([^aeiou]|\b)" words.txt  // Exactly 4
    vi.  egrep "^.{8}$" words.txt | sort -r
    vii. egrep "(^m|^n).*(oon)" words.txt
         egrep "(^m|^n).{0,}oon" words.txt
         egrep "^[mn][a-z]*oon" words.txt

Problem 3:
    i.   sed 's/ernet.in/ac.in/g' email_old.txt > email_new.txt
    ii.  sed 's/\bpublic\b/private/g' QuizProgram.java
         sed 's/\<public\>/private/g' QuizProgram.java
    iii. sed 's/!!*/./g' msg.txt
         sed -E 's/!{1,}/./g' msg.txt
    iv.  sed -E 's/(January|February|March|April|May|June|July|August|September|October|November|December) ([0-9]{2}), ([0-9]{4})/\2 \1 \3/g' date.txt

Problem 4:
    i.    awk -v max=0 '{max++} END {print max}' sample.txt
    ii.   awk -v count=0 '{ if($2 == 515042969 && m[$3] == 0) {m[$3]++; count++} } END {print count}' sample.txt
          awk -v count=0 '$2 == 515042969 { if(m[$3] == 0) {count++; m[$3]++} } END {print count}' sample.txt
    iii.  awk -v total=0 '{ if($2 == 515042969) total += $9 } END {print total}' sample.txt
    iv.   awk '{ if ($11 == 1) print $0 }' sample.txt
    v.    awk '{if ($8 >= 0.001 && $8 <= 0.009) print $0 }' sample.txt
    vi.   awk -v max=0 '{ if ( length($0) > max ) max = length($0)} END {print max}' sample.txt
    vii.  awk 'NR==100,NR==200 {print $2" \t "$8" \t "$9" \t "$10}' sample.txt
    viii. awk '{ if ( $7 > 0 ) {print $0 >> "sample0.txt"} else {print $0 >> "sample1.txt"} }' sample.txt
    ix.   awk '{print $0 >> "File"(int((NR-1)/100)+1)".txt"}' sample.txt
    x.    awk '{print NR"\t"$0}' abc.txt > temp; mv temp abc.txt
          gawk -i inplace '{ print NR,$0 }' sample.txt
          awk -i inplace '{ print NR,$0 }' sample.txt
